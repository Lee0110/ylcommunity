<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lee.ylcommunity.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.lee.ylcommunity.entity.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="entity_type" jdbcType="INTEGER" property="entityType" />
    <result column="entity_id" jdbcType="INTEGER" property="entityId" />
    <result column="target_id" jdbcType="INTEGER" property="targetId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lee.ylcommunity.entity.Comment">
    <result column="content" jdbcType="LONGVARCHAR" property="content"/>
  </resultMap>
  <sql id="Base_Column_List">
    id
    , user_id, entity_type, entity_id, target_id, status, create_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <sql id="selectFields">
    id
    , user_id, entity_type, entity_id, target_id, content, status, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectCommentByEntity" resultType="com.lee.ylcommunity.entity.Comment">
    select
    <include refid="selectFields"></include>
    from comment
    where status = 0
    and entity_type = #{entityType}
    and entity_id = #{entityId}
    order by create_time asc
    limit #{offset}, #{limit}
  </select>
  <select id="selectCountByEntity" resultType="java.lang.Integer">
    select count(id)
    from comment
    where status = 0
      and entity_type = #{entityType}
      and entity_id = #{entityId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete
    from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lee.ylcommunity.entity.Comment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comment (user_id, entity_type, entity_id,
    target_id, status, create_time,
    content)
    values (#{userId,jdbcType=INTEGER}, #{entityType,jdbcType=INTEGER}, #{entityId,jdbcType=INTEGER}, 
      #{targetId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lee.ylcommunity.entity.Comment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="entityType != null">
        entity_type,
      </if>
      <if test="entityId != null">
        entity_id,
      </if>
      <if test="targetId != null">
        target_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="entityType != null">
        #{entityType,jdbcType=INTEGER},
      </if>
      <if test="entityId != null">
        #{entityId,jdbcType=INTEGER},
      </if>
      <if test="targetId != null">
        #{targetId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lee.ylcommunity.entity.Comment">
    update comment
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="entityType != null">
        entity_type = #{entityType,jdbcType=INTEGER},
      </if>
      <if test="entityId != null">
        entity_id = #{entityId,jdbcType=INTEGER},
      </if>
      <if test="targetId != null">
        target_id = #{targetId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lee.ylcommunity.entity.Comment">
    update comment
    set user_id = #{userId,jdbcType=INTEGER},
      entity_type = #{entityType,jdbcType=INTEGER},
      entity_id = #{entityId,jdbcType=INTEGER},
      target_id = #{targetId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lee.ylcommunity.entity.Comment">
    update comment
    set user_id = #{userId,jdbcType=INTEGER},
      entity_type = #{entityType,jdbcType=INTEGER},
      entity_id = #{entityId,jdbcType=INTEGER},
      target_id = #{targetId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>